/*
Copyright 2022 Gravitational, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package main

// TODO describe

import (
	"html/template"
	"os"
)

func main() {
	t, err := template.New("endpointsV2Resolvers").Parse(endpointsV2ResolversTemplate)
	if err != nil {
		panic(err)
	}

	err = t.Execute(os.Stdout, struct {
		Copyright string
		Services  map[string]string // service name to signing name
	}{
		Copyright: copyrightHeader,
		Services: map[string]string{
			"amplifyuibuilder":           "amplifyuibuilder",
			"appconfig":                  "appconfig",
			"applicationcostprofiler":    "application-cost-profiler",
			"backupgateway":              "backup-gateway",
			"codeguruprofiler":           "codeguru-profiler",
			"codestarnotifications":      "codestar-notifications",
			"devopsguru":                 "devops-guru",
			"dlm":                        "dlm",
			"ec2instanceconnect":         "ec2-instance-connect",
			"ecrpublic":                  "ecr-public",
			"fis":                        "fis",
			"globalaccelerator":          "globalaccelerator",
			"imagebuilder":               "imagebuilder",
			"iotdataplane":               "iotdata",
			"iotdeviceadvisor":           "iotdeviceadvisor",
			"iottwinmaker":               "awsiottwinmaker",
			"location":                   "geo",
			"memorydb":                   "memorydb",
			"migrationhubrefactorspaces": "refactor-spaces",
			"migrationhubstrategy":       "awsmigrationhubstrategyrecommendation",
			"mobile":                     "awsmobilehubservice",
			"panorama":                   "panorama",
			"pinpointsmsvoice":           "sms-voice",
			"proton":                     "awsproton20200720",
			"rdsdata":                    "rds-data",
			"redshiftdata":               "redshift-data",
			"resiliencehub":              "resiliencehub",
			"route53recoverycluster":     "route53-recovery-cluster",
			"route53recoveryreadiness":   "route53-recovery-readiness",
			"signer":                     "signer",
			"snowdevicemanagement":       "snow-device-management",
			"ssmcontacts":                "ssm-contacts",
			"ssoadmin":                   "sso",
			"timestreamquery":            "timestream",
			"wafv2":                      "wafv2",
			"wellarchitected":            "wellarchitected",
			"worklink":                   "worklink",
			"workmailmessageflow":        "workmailmessageflow",
		},
	})

	if err != nil {
		panic(err)
	}
}

const copyrightHeader = `/*
Copyright 2022 Gravitational, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/`

const endpointsV2ResolversTemplate = `{{.Copyright}}

package aws

// Generated by "go run codegen/main.go > endpoints_generated.go". DO NOT EDIT.

import(
	awsv2 "github.com/aws/aws-sdk-go-v2/aws"
{{ range $service, $signingName := .Services }}
	{{ $service }}v2 "github.com/aws/aws-sdk-go-v2/service/{{ $service }}"
{{- end }}
)

// endpointsV2Resolvers is a map of endpoint resolvers by aws-sdk-go-v2 service
// libs.
var endpointsV2Resolvers = map[string]func(string) (awsv2.Endpoint, error){
{{- range $service, $signingName := .Services }}
	"{{ $signingName }}": func(region string) (awsv2.Endpoint, error) {
		return {{ $service }}v2.NewDefaultEndpointResolver().ResolveEndpoint(region, {{ $service }}v2.EndpointResolverOptions{})
	},
{{- end }}
}
`
